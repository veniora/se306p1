diff -ur Stage-3.2.2-Source/libstage/CMakeLists.txt ../Stage-3.2.2-Source/libstage/CMakeLists.txt
--- Stage-3.2.2-Source/libstage/CMakeLists.txt	2009-10-28 13:48:05.000000000 -0700
+++ ../Stage-3.2.2-Source/libstage/CMakeLists.txt	2010-09-20 14:00:54.847045541 -0700
@@ -58,6 +58,7 @@
 set_target_properties( stage PROPERTIES
 		       VERSION ${VERSION}
              LINK_FLAGS "${FLTK_LDFLAGS}"	  
+	     INSTALL_NAME_DIR ${CMAKE_INSTALL_PREFIX}/lib
 )
 
 set( stagebinarySrcs main.cc )
@@ -69,7 +70,15 @@
 
 set_target_properties( stagebinary PROPERTIES OUTPUT_NAME stage )
 
-target_link_libraries( stagebinary stage )
+if(PROJECT_OS_LINUX)
+  separate_arguments(FLTK_LIBS)
+  target_link_libraries( stagebinary stage ${LTDL_LIB} ${FLTK_LIBS} ${OPENGL_LIBRARIES} Xft jpeg png Xinerama )
+else()
+  target_link_libraries( stagebinary stage )
+endif()
+set_target_properties( stagebinary PROPERTIES
+             LINK_FLAGS ${FLTK_LDFLAGS}
+)
 
 INSTALL(TARGETS stagebinary stage
        RUNTIME DESTINATION bin
diff -ur Stage-3.2.2-Source/libstage/model_position.cc ../Stage-3.2.2-Source/libstage/model_position.cc
--- Stage-3.2.2-Source/libstage/model_position.cc	2009-10-28 13:48:05.000000000 -0700
+++ ../Stage-3.2.2-Source/libstage/model_position.cc	2010-09-20 13:43:13.574744164 -0700
@@ -47,6 +47,9 @@
     # only used if localization is set to "odom"
     odom_error [0.03 0.03 0.00 0.05]
 
+	 # only used if drive is set to "car"
+	 wheelbase 1.0
+
     # model properties
 
 		# update position according to the current velocity state
@@ -67,6 +70,7 @@
     - set the origin of the localization coordinate system. By default, this is copied from the model's initial pose, so the robot reports its position relative to the place it started out. Tip: If localization_origin is set to [0 0 0 0] and localization is "gps", the model will return its true global position. This is unrealistic, but useful if you want to abstract away the details of localization. Be prepared to justify the use of this mode in your research! 
     - odom_error [x y z theta]
     - parameters for the odometry error model used when specifying localization "odom". Each value is the maximum proportion of error in intergrating x, y, and theta velocities to compute odometric position estimate. For each axis, if the the value specified here is E, the actual proportion is chosen at startup at random in the range -E/2 to +E/2. Note that due to rounding errors, setting these values to zero does NOT give you perfect localization - for that you need to choose localization "gps".
+    - wheelbase <float,meters>\nThe wheelbase used for the car steering model. Only used if drive is set to "car". Defaults to 1.0m\n
 */
 
 
@@ -85,6 +89,7 @@
 										Model* parent,
 										const std::string& type ) : 
   Model( world, parent, type ),
+  // private
   goal(0,0,0,0),
   control_mode( CONTROL_VELOCITY ),
   drive_mode( DRIVE_DIFFERENTIAL ),
@@ -93,6 +98,8 @@
 							drand48() * INTEGRATION_ERROR_MAX_Y - INTEGRATION_ERROR_MAX_Y/2.0,
 							drand48() * INTEGRATION_ERROR_MAX_Z - INTEGRATION_ERROR_MAX_Z/2.0,
 							drand48() * INTEGRATION_ERROR_MAX_A - INTEGRATION_ERROR_MAX_A/2.0 ),
+  wheelbase( 1.0 ),
+  //public
   waypoints(),
   wpvis(),
   posevis()
@@ -138,7 +145,10 @@
 		  PRINT_ERR1( "invalid position drive mode specified: \"%s\" - should be one of: \"diff\", \"omni\" or \"car\". Using \"diff\" as default.", mode_str.c_str() );	      
 		
 	 }
- 
+  
+  // choose a wheelbase
+  this->wheelbase = wf->ReadFloat( wf_entity, "wheelbase", this->wheelbase );
+    
   // load odometry if specified
   if( wf->PropertyExists( wf_entity, "odom" ) )
     {
@@ -246,7 +256,7 @@
 					 // car like steering model based on speed and turning angle
 					 vel.x = goal.x * cos(goal.a);
 					 vel.y = 0;
-					 vel.a = goal.x * sin(goal.a)/1.0; // here 1.0 is the wheel base, this should be a config option
+					 vel.a = goal.x * sin(goal.a)/wheelbase;
 					 break;
 			  
 				  default:
diff -ur Stage-3.2.2-Source/libstage/stage.hh ../Stage-3.2.2-Source/libstage/stage.hh
--- Stage-3.2.2-Source/libstage/stage.hh	2009-10-28 13:48:05.000000000 -0700
+++ ../Stage-3.2.2-Source/libstage/stage.hh	2010-09-20 13:43:13.574744164 -0700
@@ -2827,7 +2827,7 @@
 	 DriveMode drive_mode;
 	 LocalizationMode localization_mode; ///< global or local mode
 	 Velocity integration_error; ///< errors to apply in simple odometry model
-	 
+	 double wheelbase;
 	 
   public:
 	 // constructor
Only in ../Stage-3.2.2-Source: unpacked
